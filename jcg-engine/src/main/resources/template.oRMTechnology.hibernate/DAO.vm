package com.packt.webstore.domain.repository.common;

import com.packt.webstore.exception.DAOException;
import java.io.Serializable;
import java.util.List;

/**
* Created by Saeed on 5/21/2015.
* @author Kayvanfar
* @param <T>
    * generic DAO interface
    */
    public interface Dao<T extends Object> {
    void save(T t) throws DAOException;

    T load(Serializable id);

    T findByID(Serializable id);

    List<T> findAll();

        List<T> findByIds(String property, String[] ids);

            <V extends Object> T findObjectByPropertyEqualTo(String propertyName, V propertyValue);

                <V extends Object> List<T> findByPropertyEqualTo(String propertyName, V propertyValue);

                    <V extends Object> List<T> findByProperties(String propertyName, V[] propertyValue);

                        List<T> findByProperties(String propertyName, String[] propertyValue);

                            List<T> findByProperties(String[] propertyName, String[] propertyValue);

                                ////////////////////////////////////////////////// by me
                                <V> List<T> findByPropertiesLikeExact(String[] propertyName, V[] propertyValue);
                                    List<T> findByPropertiesLikeExact(String[] propertyName, String propertyValue);
                                        <V extends Object> boolean existByProperty(String propertyName, V propertyValue);
                                            ////////////////////////////////////////////////// by me

                                            T findObjectByProperties(String[] propertyName, String[] propertyValue);

                                            <V extends Object> List<T> findByPropertyOfPropertyEqualTo(String property, String propertyOfProperty, V value);

                                                <V extends Object> T findObjectByPropertyOfPropertyEqualTo(String property, String propertyOfProperty, V value);

                                                    <V extends Object> List<T> findByPropertyEqualToIgnoreCase(String propertyName, V propertyValue);

                                                        <V extends Object> List<T> findByPropertyLessThanOrEqualTo(String propertyName, V propertyValue);

                                                            <V extends Object> List<T> findByPropertyGreaterThanOrEqualTo(String propertyName, V propertyValue);

                                                                <V extends Object> List<T> findByPropertyLessThan(String propertyName, V propertyValue);

                                                                    <V extends Object> List<T> findByPropertyGreaterThan(String propertyName, V propertyValue);

                                                                        List<T> findByPropertyLikeAnyWhereMode(String propertyName, String propertyValue);

                                                                            List<T> findByPropertyLikeAnyWhereModeIgnoreCase(String propertyName, String propertyValue);

                                                                                <V extends Object> T findObjectByPropertyEqualToIgnoreCase(String propertyName, V propertyValue);

                                                                                    <V extends Object> List<T> findByProperties(String[] propertyName, V[] propertyValue);

                                                                                        <V extends Object> List<T> findByPropertiesWithDescOrder(String[] propertyName, V[] propertyValue, String propertyForOrder);

                                                                                            <V extends Object> List<T> findByPropertyNotEqualTo(String propertyName, V propertyValue);

                                                                                                List<T> findByPropertyLikeExact(String propertyName, String propertyValue);

                                                                                                    T findByPropertyLikeExactModeIgnoreCase(String propertyName, String propertyValue);

                                                                                                    T findByPropertyLikeModeIgnoreCase(String propertyName, String propertyValue);

                                                                                                    List<T> findByPropertyLikeAnyWhereModeIgnoreCasePartially(String propertyName, String propertyValue);

                                                                                                        List<T> findByAssociatedProperty(String associatedProperty, String propertyName, Integer propertyValue);

                                                                                                            void reattachToSession(T t);

                                                                                                            void update(T t);

                                                                                                            void saveOrUpdate(T t);

                                                                                                            //    void saveOrUpdateAll(Collection<T> coll);

                                                                                                                void delete(T t);

                                                                                                                void deleteById(Serializable id);

                                                                                                                void deleteAll();

                                                                                                                long count();

                                                                                                                boolean exists(Serializable id);
                                                                                                                }
